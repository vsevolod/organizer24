#= require calendar_autocomplete

enable_workers = () ->
  $('#second #workers input').attr('disabled', false)

to_i = (date_or_number) ->
  if typeof( date_or_number ) == 'number'
    date_or_number
  else
    if date_or_number == null
      0
    else
      date_or_number.valueOf() / 1000

Organizer.destroy_all_popovers = ( appointment_id ) ->
  $('div[data-id]').popover('destroy')
  $('.popover').remove()

find_event = (event_id, field) ->
  event = $.grep( $('#calendar').fullCalendar( 'clientEvents' ), (item) ->
    return item[field] == event_id
  )[0]

gotoPopover = ->
  $('body,html,document').animate({
    'scrollTop': $('a[name="popover_title"]').offset().top-110
  }, 500)

Organizer.removeOtherElements = () ->
  $('#second').css('opacity', 1)
  $('#first').css('opacity', 1)
  $('#calendar').fullCalendar( 'removeEvents', 100000 )
  Organizer.destroy_all_popovers()

getEventSources = ->
  worker_id = $('#workers input:checked').val()
  if worker_id
    worker = ""
    [
      {
        url: "/workers/#{worker_id}/working_hours/by_week",
        borderColor: '#ccc'
      },
      {
        url: show_checkboxes(worker_id),
        borderColor: '#ccc'
      }
    ]
  else
    []

window.show_checkboxes = (worker_id) ->
  params = "/appointments/by_week?worker_id=#{worker_id}"
  if $('.show_statuses')
    params += "&"
    params += $.map( $('.show_statuses input:checked'), (el, index) ->
      return "statuses[]="+$(el).val()
    ).join('&')
  Organizer.old_event_source = params
  params

Organizer.event_sources = getEventSources()

# Показываем существующие услуги у события
show_appointment_services = (event, options) ->
  text = ''
  if ( event['data-services'] )
    if !options['hide_title']
      if event['data-client']
        text += "<p>#{event['data-client']}</p>"
      text += '<b>Услуги:</b><br/>'
    cost = 0
    showing_time = event['data-showing-time']
    $.each( JSON.parse(event['data-services']) , (id, el) ->
      text += el.name + '<br/>'
      if !(event['data-cost'])
        cost += el.cost
      #showing_time += el.showing_time
    )
    if (event['data-cost'])
      cost = event['data-cost']
    text += '<br/>'
    text += "Время: "+showing_time+" мин.<br/> Стоимость: "+cost+" руб.<br/>"
  text

# Перенос события
drop_draggable = ( date, allDay ) ->
  originalEventObject = Organizer.draggable_item
  period = originalEventObject.end.valueOf() - originalEventObject.start.valueOf()
  originalEventObject.start = date
  originalEventObject.end = new Date( date.valueOf() + period )
  copiedEventObject = $.extend({
    _id: 100000,
    start: originalEventObject.start,
    end: originalEventObject.end,
    _start: originalEventObject.start,
    _end: originalEventObject.end,
    confirm: $('.buttons_to_confirm').html(),
    allDay: false,
    editable: false,
    'data-services': originalEventObject['data-services'],
    title: originalEventObject.title,
    'data-showing-time': originalEventObject['data-showing-time'],
    'data-id': originalEventObject['data-id'],
    'data-inner-class': originalEventObject['data-inner-class'],
    'data-client': originalEventObject['data-client']
    'is_owner': originalEventObject['is_owner']
  }, {})
  intersection = $.grep( $('#calendar').fullCalendar('clientEvents'), (el) ->
    if Array.max( [to_i( el.start ), to_i( copiedEventObject.start )] ) < Array.min( [to_i( el.end ), to_i( copiedEventObject.end )] )
      return el
  )
  end_date = new Date( copiedEventObject.end)
  if intersection.length > 0
    alert('Запись на этот период невозможна')
  else if to_i(copiedEventObject.end) == to_i(copiedEventObject.start)
    alert('Не получается перенести запись с периодом = 0')
  else if (end_date.getHours()*60+end_date.getMinutes())*60 <= start_calendar_options.maxTime
    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)
  else
    alert('Рабочий день заканчивается')

# Создание нового события
drop_div = ( date, allDay ) ->
  if $('.ui-draggable').css('display') != 'none'
    originalEventObject = $('.external-event').data('eventObject')
    if $('#user_showing_time').val() && $('#user_showing_time').val() != ""
      originalEventObject.duration = $('#user_showing_time').val()
    copiedEventObject = $.extend({
      editable: false,
      disableDragging: true,
      disableResizing: true,
      _id: 100000,
      confirm: $('.buttons_to_confirm').html()
    }, originalEventObject)
    if originalEventObject.duration <= 30
      copiedEventObject.title = ''
    copiedEventObject.start = date
    copiedEventObject.end = to_i(date) + originalEventObject.duration*60
    copiedEventObject.allDay = allDay
    intersection = $.grep( $('#calendar').fullCalendar('clientEvents'), (el) ->
      if Array.max( [to_i( el.start ), to_i( copiedEventObject.start )] ) < Array.min( [to_i( el.end ), to_i( copiedEventObject.end )] )
        return el
    )
    end_date = new Date( copiedEventObject.end*1000)
    if intersection.length > 0
      alert('Запись на этот период невозможна')
    else if $('#user_phone').val() == ''
      alert('Заполните номер телефона')
    else if to_i(copiedEventObject.end) == to_i(copiedEventObject.start)
      alert('Для начала выберите услугу')
    else if (end_date.getHours()*60+end_date.getMinutes())*60 <= start_calendar_options.maxTime
      $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)
      $('#start').val(copiedEventObject.start.valueOf())
      $('#second').css('opacity', 0.1)
      $('#first').css('opacity', 0.1)
    else
      alert('Рабочий день заканчивается')

if $(window).width() < 702
  defaultView = 'agendaDay'
  availableRight = ''
else
  defaultView = 'agendaWeek'
  availableRight = 'agendaDay,agendaWeek'

$('#calendar').fullCalendar({
  header: {
    left: 'prev,next today',
    center: 'title',
    right: availableRight
  },
  year:  new Date( start_calendar_options.initial_date ).getFullYear(),
  month: new Date( start_calendar_options.initial_date ).getMonth(),
  date:  new Date( start_calendar_options.initial_date ).getDate(),
  firstDay: 1,
  aspectRatio: 1.5,
  defaultView: defaultView,
  allDaySlot: false,
  allDayDefault: false,
  minTime: start_calendar_options.minTime*1.0/(60*60),
  maxTime: start_calendar_options.maxTime*1.0/(60*60),
  slotMinutes: start_calendar_options.slotMinutes,
  monthNames: <%= I18n.t('date.standalone_month_names').compact %>,
  dayNames: <%= I18n.t('date.standalone_day_names').compact %>,

  axisFormat: 'HH:mm',
  timeFormat: {
    agenda: 'H:mm{ - H:mm}',
    '': 'H(:mm)'
  },
  columnFormat: {
    week: "dd.MM.yyyy \n dddd",
    day:  "dddd",
  },
  titleFormat: {
    day: "dd.MM.yyyy -- MMMM --"
    week: "MMMM d[ yyyy]{ '&#8212;'[ MMMM] d yyyy"
  },
  buttonText: {
    today: 'Сегодня'
    week: 'Неделя'
    day: 'День'
    month: 'Месяц'
  },
  eventSources: Organizer.event_sources,
  dayClick: (date, allDay, jsEvent, view) ->
    if $('body .popover').length == 0
      if Organizer.calendar_draggable
        drop_draggable( date, allDay )
      else
        drop_div( date, allDay)
    else
      Organizer.removeOtherElements()
    false
  selectable: false,
  selectHelper: true,
  editable: false,
  droppable: false,
  # DROPABLE drop: ((date, allDay) ->
  # DROPABLE   drop_div( date, allDay)
  # DROPABLE ),
  eventRender: (event, element) ->
    title = element.find('.fc-event-title').text()
    title = event['data-comment']+' '+title if event['data-comment']
    element.find('.fc-event-title').html(title)
    element.addClass( event['data-inner-class'] )
    element.attr('data-id', event['data-id'] )
    if event.is_owner
      event.durationEditable = true
      event.startEditable = true
      event.editable = true
    if event['data-inner-class'] == 'legend-your-offer'
      event.startEditable = true
    if event.confirm
      text = '<b>Услуги:</b> <br/>'
      $.each( $('.check_services input:checked'), (id, el) ->
        text += $(el).parents('.service').first().find('.stitle').text() + '<br/>'
      )
      sas = show_appointment_services(event, {hide_title: true})
      if (sas != '')
        text += sas
      else
        text += element.find('.fc-event-title').text()

      text += event.confirm
      Organizer.destroy_all_popovers()
      element.popover({
        html: true,
        content: text,
        title: '<a name="popover_title" href="#popover_title"></a>Подтвердить',
        trigger: 'manual',
        container: 'body',
        placement: 'top'
      }).popover('show')
      gotoPopover()
      popover = $('.popover.right')
      top = parseFloat(popover.css('top')) - parseFloat(popover.height())/2 - 20
      popover.css( 'top', top )
    element
  eventAfterRender: (event, element, view) ->
    #console.log( event )
    #console.log( element )
    #console.log( view )
  eventDrop: (event, dayDelta, minuteDelta, allDay, revertFunc) ->
    appointment_id = event['data-id']
    if (confirm("Вы уверены, что хотите изменить время записи?"))
      $.ajax( {
        url: '/appointments/'+appointment_id+'/change_start_time',
        type: 'POST',
        dataType: 'script',
        data: { start: event.start.valueOf() },
        success: (data)->
          if data.match('alert')
            revertFunc()
      } )
    else
      revertFunc()
  eventResize: (event, dayDelta, minuteDelta, revertFunc) ->
    appointment_id = event['data-id']
    if (confirm("Вы уверены, что хотите изменить продолжительность записи?"))
      $.ajax( {
        url: '/appointments/'+appointment_id+'/change_params',
        type: 'POST',
        dataType: 'script',
        data: { showing_time: event.end.valueOf() - event.start.valueOf()},
        success: (data)->
          if data.match('alert')
            revertFunc()
      } )
    else
      revertFunc()

  eventClick: (event, jsEvent, view) ->
    Organizer.destroy_all_popovers()
    element = $(jsEvent.currentTarget)
    popup_text = show_appointment_services(event, {})
    if event['data-comment']
      popup_text = "<b>#{event['data-comment']}</b><br/>" + popup_text
    if event['is_owner'] || event['data-inner-class'] == 'legend-your-offer'
      popup_text += '<a class="btn-block btn btn-warning ChangeAppointment" href="#" data-id="'+event['_id']+'"><i class="icon-share-alt icon-white" />Изменить услуги</a>'
      popup_text += '<a class="btn-block btn btn-info move_appointment" href="#" data-id="'+event['_id']+'"><i class="icon-time icon-white" />Перенести запись</a>'
    if event['is_owner']
      popup_text += '<a class="btn-block btn btn-warning ChangeTimeForAppointment" data-id="'+event['data-id']+'" href=""><i class="icon-share-alt icon-white" />Изменить время/стоимость</a>'
      popup_text += '<a class="btn-block btn btn-warning" href="/appointments/'+event['data-id']+'/services_users" data-id="'+event['_id']+'"><i class="icon-share-alt icon-white" />Настройка сервисов</a>'
      <% I18n.t("legend.do_status").each_pair do |state, human_state| %>
      popup_text += '<a data-method="post" class="btn-block btn legend-<%=state%>" href="/appointments/'+event['data-id']+'/change_status?state=<%=state%>"><%=human_state%></a>'
      <% end %>
    else
      if event['data-inner-class'] == 'legend-your-offer'
        popup_text += '<a rel="nofollow" data-method="post" class="btn-block btn btn-danger" href="/appointments/'+event['data-id']+'/change_status?state=cancel_client"><i class="icon-remove icon-white"/>Отменить запись</a><br/>'
    if event['is_owner'] || event['data-inner-class'] == 'legend-your-offer'
      Organizer.destroy_all_popovers()
      element.popover( {
        html: true,
        content: popup_text,
        title: '<a name="popover_title" href="#popover_title"></a>Описание' + ' №' + event['data-id'],
        trigger: 'manual',
        container: 'body',
        placement: 'top'
      }).popover('show')
      gotoPopover()
})

$('body').on('click', '.ChangeTimeForAppointment', ->
  parent = $(this).parent()
  form_start = "<form method='post' class='bs-docs-example' data-remote='true' action='/appointments/"+$(this).data('id')+"/change_params'>"
  form_end = "<button class='btn' type='submit' name='commit'>Ред.</button></div></form>"
  parent.html(parent.html().replace(/Время: (\d+) мин./,  form_start + "Время: <div class='input-append'><input type='text' value='$1' name='showing_time' id='showing_time' class='form-control span3'>" + form_end))
  parent.html(parent.html().replace(/Стоимость: (\d+) руб./,  form_start + "Стоимость: <div class='input-append'><input type='text' value='$1' name='cost' id='cost' class='form-control span3'>" + form_end))
  false
)

$('body').on('click', '.ChangeAppointment', ->
  event = find_event( $(this).data('id'), '_id' )
  appointment_id = event['data-id']
  Organizer.destroy_all_popovers()
  $('div[data-id="'+appointment_id+'"]').popover( {
    html: true,
    content: '',
    title: '<a name="popover_title" href="#popover_title"></a>Изменение',
    trigger: 'manual',
    container: 'body',
    placement: 'right'
  }).popover('show')

  $.getScript( '/appointments/'+appointment_id+'/edit?worker_id='+$('#workers input:checked').val(), ->
    gotoPopover()
    if $().iCheck
      $('.popover-content').addClass('modal-content')
      $('.popover-content .appointment_services input').iCheck({
        checkboxClass: 'icheckbox_minimal',
        radioClass: 'iradio_minimal',
        increaseArea: '20%'
      })
    )
  false
)

$('body').on('click', '.move_appointment', ->
  Organizer.destroy_all_popovers()
  Organizer.draggable_item = $('#calendar').fullCalendar( 'clientEvents', $(this).data('id') )[0]
  Organizer.calendar_draggable = true
  $('#calendar').addClass('draggable_calendar')
  $('#calendar').fullCalendar( 'removeEvents', $(this).data('id') )
  false
)

$('body').on('click', '.confirm_calendar', ->
  $('#second').css('opacity', 1)
  $('#first').css('opacity', 1)
  if Organizer.calendar_draggable # Если перетаскиваем событие
    $('#calendar').removeClass('draggable_calendar')
    appointment_id = Organizer.draggable_item['data-id']
    event = find_event( appointment_id, 'data-id' )
    event.confirm = false
    Organizer.destroy_all_popovers()
    $.ajax( {
      url: '/appointments/'+appointment_id+'/change_start_time',
      type: 'POST',
      dataType: 'script',
      data: { start: Organizer.draggable_item.start.valueOf() }
    } )
  else
    $('#user_phone').parents('.control-group').removeClass('error')
    $('#start').val( $('#calendar').fullCalendar('clientEvents', 100000)[0]['_start'].valueOf() )
    $('#first').parent().submit()
  false
)

$('body').on('click', '.cancel_calendar', ->
  Organizer.removeOtherElements()
  false
)

$('body').on('click', '.close_popover', ->
  Organizer.destroy_all_popovers()
  false
)

$('.show_statuses .checkbox input').change ->
  $.get("/main/set_session?key=show_#{$(this).val()}&value=#{$(this).is(':checked')}", ->
    worker = $('#workers input:checked').val()
    $('#calendar').fullCalendar('removeEventSource', Organizer.old_event_source)
    $('#calendar').fullCalendar('addEventSource', show_checkboxes(worker))
    $('#calendar').fullCalendar('removeEvents').fullCalendar( 'refetchEvents' )
  )

$('#second #workers input').change ->
  $('#second #workers input').attr('disabled', true)
  # update services
  if $().iCheck
    $('#second .check_services').html($(this).attr('check_services')).find('input').iCheck({
      checkboxClass: 'icheckbox_minimal',
      radioClass: 'iradio_minimal',
      increaseArea: '20%'
    })
    $(".tooltips").tooltip()
  else
    $('#second .check_services').html($(this).attr('check_services'))
  # update event sources
  $.each(Organizer.event_sources, (id, event_source) ->
    $('#calendar').fullCalendar('removeEventSource', event_source)
  )
  Organizer.event_sources = getEventSources()
  $.each(Organizer.event_sources, (id, event_source) ->
    $('#calendar').fullCalendar('addEventSource', event_source)
  )
  setTimeout(enable_workers, 2000)
