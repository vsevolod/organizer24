to_i = (date_or_number) ->
  if typeof( date_or_number ) == 'number'
    date_or_number
  else
    date_or_number.valueOf() / 1000

Organizer.destroy_popover_by_id = ( appointment_id ) ->
  el = $('div[data-id="'+appointment_id+'"]').popover('destroy')
  return $('div[data-id="'+appointment_id+'"]')

find_event = (event_id) ->
  event = $.grep( $('#calendar').fullCalendar( 'clientEvents' ), (item) ->
    return item._id == event_id
  )[0]

show_checkboxes = ->
  params = '/appointments/by_week'
  if $('.show_statuses')
    params += "?"
    params += $.map( $('.show_statuses .checkbox input:checked'), (el, index) ->
      return "statuses[]="+$(el).val()
    ).join('&')
  Organizer.old_event_source = params
  params

# Показываем существующие услуги у события
show_appointment_services = (event, options) ->
  text = ''
  if ( event['data-services'] )
    if !options['hide_title']
      text += '<b>Услуги:</b> <br/>'
    cost = 0
    showing_time = 0
    $.each( JSON.parse(event['data-services']) , (id, el) ->
      text += el.name + '<br/>'
      cost += el.cost
      showing_time += el.showing_time
    )
    text += '<hr/>'
    if cost > 0
      text += "Время: "+showing_time+" мин.<br/> Стоимость: "+cost+" руб.<br/>"
  text

# Перенос события
drop_draggable = ( date, allDay ) ->
  originalEventObject = Organizer.draggable_item
  period = originalEventObject.end.valueOf() - originalEventObject.start.valueOf()
  originalEventObject.start = date
  originalEventObject.end = new Date( date.valueOf() + period )
  copiedEventObject = $.extend({
    _id: 100000,
    start: originalEventObject.start,
    end: originalEventObject.end,
    _start: originalEventObject.start,
    _end: originalEventObject.end,
    confirm: $('.buttons_to_confirm').html(),
    allDay: false,
    editable: false,
    'data-services': originalEventObject['data-services'],
    title: originalEventObject.title,
    'data-id': originalEventObject['data-id'],
    'data-inner-class': originalEventObject['data-inner-class']
  }, {})
  intersection = $.grep( $('#calendar').fullCalendar('clientEvents'), (el) ->
    if Array.max( [to_i( el.start ), to_i( copiedEventObject.start )] ) < Array.min( [to_i( el.end ), to_i( copiedEventObject.end )] )
      return el
  )
  end_date = new Date( copiedEventObject.end)
  if intersection.length > 0
    alert('Запись на этот период невозможна')
  else if to_i(copiedEventObject.end) == to_i(copiedEventObject.start)
    alert('Не получается перенести запись с периодом = 0')
  else if (end_date.getHours()*60+end_date.getMinutes())*60 <= start_calendar_options.maxTime
    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)
    #TODO >>> update event date
  else
    alert('Рабочий день заканчивается')

# Создание нового события
drop_div = ( date, allDay ) ->
  if $('.ui-draggable').css('display') != 'none'
    originalEventObject = $('.ui-draggable').data('eventObject')
    copiedEventObject = $.extend({
      editable: false,
      disableDragging: true,
      disableResizing: true,
      _id: 100000,
      confirm: $('.buttons_to_confirm').html()
    }, originalEventObject)
    if originalEventObject.duration <= 30
      copiedEventObject.title = ''
    copiedEventObject.start = date
    copiedEventObject.end = to_i(date) + originalEventObject.duration*60
    copiedEventObject.allDay = allDay
    intersection = $.grep( $('#calendar').fullCalendar('clientEvents'), (el) ->
      if Array.max( [to_i( el.start ), to_i( copiedEventObject.start )] ) < Array.min( [to_i( el.end ), to_i( copiedEventObject.end )] )
        return el
    )
    end_date = new Date( copiedEventObject.end*1000)
    if intersection.length > 0
      alert('Запись на этот период невозможна')
    else if to_i(copiedEventObject.end) == to_i(copiedEventObject.start)
      alert('Для начала выберите услугу')
    else if (end_date.getHours()*60+end_date.getMinutes())*60 <= start_calendar_options.maxTime
      $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)
      $('#start').val(copiedEventObject.start)
      $('#second').css('opacity', 0.1)
    else
      alert('Рабочий день заканчивается')

$('#calendar').fullCalendar({
  header: {
    left: 'prev,next today',
    center: 'title',
    right: ''
  },
  firstDay: 1,
  aspectRatio: 1.5,
  defaultView: 'agendaWeek',
  allDaySlot: false,
  allDayDefault: false,
  minTime: start_calendar_options.minTime*1.0/(60*60),
  maxTime: start_calendar_options.maxTime*1.0/(60*60),
  slotMinutes: start_calendar_options.slotMinutes,
  monthNames: <%= I18n.t('date.standalone_month_names').compact %>,
  dayNames: <%= I18n.t('date.standalone_day_names').compact %>,

  axisFormat: 'HH:mm',
  timeFormat: {
    agenda: 'H:mm{ - H:mm}',
    '': 'H(:mm)'
  },
  columnFormat: {
    week: "dd.MM.yyyy '<br/>' dddd",
  },
  titleFormat: {
    week: "MMMM d[ yyyy]{ '&#8212;'[ MMMM] d yyyy"
  },
  buttonText: {
    today: 'Сегодня'
  },
  eventSources: [
    {
      url: '/working_hours/by_week',
      borderColor: '#ccc'
    },
    {
      url: show_checkboxes(),
      borderColor: '#ccc'
    }
  ],
  dayClick: (date, allDay, jsEvent, view) ->
    if $('.popover-inner').length == 0
      if Organizer.calendar_draggable
        drop_draggable( date, allDay )
      else
        drop_div( date, allDay)
    false
  selectable: false,
  selectHelper: true,
  editable: false,
  droppable: true,
  drop: ((date, allDay) ->
    drop_div( date, allDay)
  ),
  eventRender: (event, element) ->
    element.find('.fc-event-title').html(element.find('.fc-event-title').text())
    element.find('.fc-event-inner').addClass( event['data-inner-class'])
    element.attr('data-id', event['data-id'])
    if event.confirm
      text = '<b>Услуги:</b> <br/>'
      $.each( $('.check_services input:checked').parent(), (id, el) ->
        text += $(el).text() + '<br/>'
      )
      sas = show_appointment_services(event, {hide_title: true})
      if (sas != '')
        text += sas
      else
        text += element.find('.fc-event-title').text()

      text += event.confirm
      element.popover( {
        content: text,
        title: 'Подтвердить',
        trigger: 'manual',
        placement: 'right' }).popover('show')
      popover = $('.popover.right')
      top = parseFloat(popover.css('top')) - parseFloat(popover.height())/2 - 20
      popover.css( 'top', top )
    element
  eventAfterRender: (event, element, view) ->
    #console.log( event )
    #console.log( element )
    #console.log( view )
  eventClick: (event, jsEvent, view) ->
    element = $(jsEvent.currentTarget)
    if event['data-inner-class'] == 'legend-your-offer'
      sas = show_appointment_services(event, {})
      sas += '<a class="btn btn-warning change_appointment" href="#" data-id="'+event['_id']+'"><i class="icon-share-alt" />Изменить запись</a>'
      sas += '<a rel="nofollow" data-method="post" class="btn btn-warning" href="/appointments/'+event['data-id']+'/change_status?state=cancel_client"><i class="icon-remove"/>Отменить запись</a><br/>'
      sas += '<a class="btn btn-warning move_appointment" href="#" data-id="'+event['_id']+'"><i class="icon-share-alt" />Перенести запись</a><br/>'
      element.popover( {
        title: 'Возможные действия',
        content: sas,
        trigger: 'manual',
        placement: 'right'
      }).popover('show')
})

$('.change_appointment').live('click', ->
  event = find_event( $(this).data('id') )
  appointment_id = event['data-id']
  Organizer.destroy_popover_by_id( appointment_id ).popover( {
    title: 'Изменение',
    content: '<div id="popover_for_change"></div>',
    trigger: 'manual',
    placement: 'right'
  }).popover('show')
  $.getScript( '/appointments/'+appointment_id+'/edit/' )
  false
)

$('.move_appointment').live('click', ->
  $(this).parents('.popover').remove()
  Organizer.draggable_item = $('#calendar').fullCalendar( 'clientEvents', $(this).data('id') )[0]
  Organizer.calendar_draggable = true
  $('#calendar').addClass('draggable_calendar')
  $('#calendar').fullCalendar( 'removeEvents', $(this).data('id') )
  false
)

$('.confirm_calendar').live('click', ->
  if Organizer.calendar_draggable
    $('#calendar').removeClass('draggable_calendar')
    appointment_id = Organizer.draggable_item['data-id']
    $(this).parents('.popover').remove()
    $.ajax( {
      url: '/appointments/'+appointment_id+'/change_start_time',
      type: 'POST',
      dataType: 'script',
      data: { start: Organizer.draggable_item.start }
    } )
  else
    $('#user_phone').parents('.control-group').removeClass('error')
    $('#start').val( $('#calendar').fullCalendar('clientEvents', 100000)[0]['_start'] )
    $('#first').parent().submit()
  false
)

$('.cancel_calendar').live('click', ->
  $('#second').css('opacity', 1)
  $('#calendar').fullCalendar( 'removeEvents', 100000 )
  $(this).parents('.popover').remove()
  false
)

$('.close_popover').live('click', ->
  if appointment_id = $(this).data('id')
    Organizer.destroy_popover_by_id( appointment_id )
  else
    $(this).parents('.popover').remove()
  false
)

$('.show_statuses .checkbox input').change ->
  $('#calendar').fullCalendar('removeEventSource', Organizer.old_event_source).fullCalendar('addEventSource', show_checkboxes())
  $('#calendar').fullCalendar('removeEvents').fullCalendar( 'refetchEvents' )
